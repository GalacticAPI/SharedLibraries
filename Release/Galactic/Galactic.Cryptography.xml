<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Galactic.Cryptography</name>
    </assembly>
    <members>
        <member name="T:Galactic.Cryptography.AES256">
            <summary>
            Rijndael is a class that allows for the easy encryption and decryption of strings
            using the AES 256 encryption algorithm.
            </summary>
        </member>
        <member name="M:Galactic.Cryptography.AES256.GenerateIV">
            <summary>
            Generates a random initialization vector for use by the encryption algorithm.
            </summary>
            <returns>A random array of bytes, or an empty byte array if the IV could not be
            generated.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.BytesToString(System.Byte[])">
            <summary>
            Generates a string representation of an array of bytes.
            </summary>
            <param name="bytes">The bytes to convert.</param>
            <returns>A string representation of an array of bytes, or null if
            the string is too large to convert successfully.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.StringToBytes(System.String)">
            <summary>
            Generates a byte representation of a string generated by BytesToString().
            </summary>
            <param name="text">The string to convert.</param>
            <returns>A byte representation of the string, or any empty byte array if the string could not
            be successfully converted.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.GenerateKey">
            <summary>
            Generates a random key for use by the encryption algorithm.
            </summary>
            <returns>A random array of bytes, or an empty byte array if the key could not be
            generated.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.EncryptStringToBytes(System.String,System.Byte[],System.Byte[])">
            <summary>
            Encrypts a string of text to an array of AES 256 encrypted bytes. 
            </summary>
            <param name="text">The text to encrypt.</param>
            <param name="key">The key used by the encryption algorithm.</param>
            <param name="iv">The initialization vector used by the encryption algorithm.</param>
            <returns>An encrypted array of bytes, or an empty array of bytes if the string could not
            be encrypted.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.CreateConsolidatedString(System.String)">
            <summary>
            Encrypts a string of text with AES 256, and concatenates the key and initialization vector to
            the beginning of the string, and the length of the key and initialization vector to the end
            of the string. This is useful in scenarios where it is not feasible to store the key and
            initialization vector seperately, though not as secure.
            </summary>
            <param name="text">The text to encrypt.</param>
            <returns>A string representation containing the key, initialization vector, and encrypted text,
            along with the lengths of the key and initialization vector, or a null string if the text
            could not be encrypted or an error occurs creating the string.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.DecryptConsolidatedString(System.String)">
            <summary>
            Decrypts a consolidated string containing and AES 256 encrypted string, and properties of the key and initializiation
            vector used to encrypt/decrypt the string.
            </summary>
            <param name="text">The consolidated string to decrypt.</param>
            <returns>The text encrypted in the consolidated string, or a null string if the text could not be decrypted or an error
            occurs decrypting the string.</returns>
        </member>
        <member name="M:Galactic.Cryptography.AES256.DecryptStringFromBytes(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts an array of AES 256 encrypted bytes to a plain text string. 
            </summary>
            <param name="cipherText">The bytes to decrypt.</param>
            <param name="key">The key used by the decryption algorithm.</param>
            <param name="iv">The initialization vector used by the decryption algorithm.</param>
            <returns>The decrypted string, or null if the byte array could not be decrypted.</returns>
        </member>
        <member name="T:Galactic.Cryptography.SaltedHash">
            <summary>
            SaltedHash is a class that generates and verifies salted
            hashes for cryptographic purposes.
            </summary>
        </member>
        <member name="M:Galactic.Cryptography.SaltedHash.GenerateSalt">
            <summary>
            Generates a random salt using cryptographically secure algorithms.
            </summary>
            <returns>A random integer.</returns>
        </member>
        <member name="M:Galactic.Cryptography.SaltedHash.GenerateHash(System.String,System.Int32@)">
            <summary>
            Generates a salted hash using the supplied string data.
            A random integer is generated as the salt.
            </summary>
            <param name="data">The data to generate a hash off.</param>
            <param name="salt">A random integer used as a salt.</param>
            <returns></returns>
        </member>
        <member name="M:Galactic.Cryptography.SaltedHash.VerifyHash(System.String,System.Int32,System.String)">
            <summary>
            Verifies that the supplied data string matches the value in the supplied hash.
            </summary>
            <param name="data">The string of data to check against the hash.</param>
            <param name="salt">The salt for this data.</param>
            <param name="hash">The hash to compare against.</param>
            <returns>True if the data matches, false otherwise.</returns>
        </member>
        <member name="T:Galactic.Cryptography.SHA256">
            <summary>
            Handles getting and verifying SHA256 hashes.
            Based on Microsoft's example code.
            </summary>
        </member>
        <member name="M:Galactic.Cryptography.SHA256.GetHash(System.String)">
            <summary>
            Hash in input string and return the hash as a 32 character hexadecimal string.
            </summary>
            <param name="input">String to create the hash of.</param>
            <returns>The hash of the string.</returns>
        </member>
        <member name="M:Galactic.Cryptography.SHA256.VerifyHash(System.String,System.String)">
            <summary>
            Verify a hash against a string.
            </summary>
            <param name="input">The input string to verify.</param>
            <param name="hash">The hash to verify against.</param>
            <returns>True if the input string matches the hash.</returns>
        </member>
    </members>
</doc>
