<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Galactic.ActiveDirectory</name>
    </assembly>
    <members>
        <member name="T:Galactic.ActiveDirectory.ActiveDirectory">
            <summary>
            ActiveDirectory is a class that allows for the query and manipulation
            of Active Directory objects.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.DEFAULT_FIRST_SITE_NAME">
            <summary>
            The default first site name in Active Directory.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.GROUP_NAME_MAX_CHARS">
            <summary>
            The maximum number of characters supported for a group's name in Active Directory.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.PAGE_SIZE">
            <summary>
            The size of page to use when searching Active Directory. This number is based upon
            hardcoded Microsoft limits within Active Directory's architecture.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.MAX_NUM_MULTIVALUE_ATTRIBUTES">
            <summary>
            The maximum number of values that can be retrieved from a multi-value attribute in a single search request.
            Windows 2000 DCs do not support this value and default to a maximum of 1000;
            </summary>
        </member>
        <member name="T:Galactic.ActiveDirectory.ActiveDirectory.GroupType">
            <summary>
            GroupType enumerates the type of group objects in Active Directory.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.GroupType.Universal">
            <summary>
            Specifies a group that can contain accounts from any domain, global
            groups from any domain, and other universal groups. This type of group
            cannot contain domain local groups.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.GroupType.DomainLocal">
            <summary>
            Specifies a group that can contain accounts from any domain, other domain
            local groups from the same domain, global groups from any domain, and
            universal groups. This type of group should not be included in access-control
            lists of resouces in other domains. This type of group is intended for use
            with the LDAP provider.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.GroupType.Global">
            <summary>
            Specifies a group that can contain accounts from the domain and other global
            groups from the same domain. This type of group can be exported to a different
            domain.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.GroupType.Security">
            <summary>
            Specifies a group that is security enabled. This group can be used to apply an
            access-control list on an Active Directory object or a file system.
            </summary>
        </member>
        <member name="T:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl">
            <summary>
            Flags for use with the UserAccountControl and ms-DS-User-Account-Control-Computed properties of a user.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.Script">
            <summary>
            The logon script will be run.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.Accountdisable">
            <summary>
            The user account is disabled.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.HomedirRequired">
            <summary>
            The home folder is required.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.Lockout">
            <summary>
            Only available via ms-DS-User-Account-Control-Computed attribute.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.PasswdNotreqd">
            <summary>
            No password is required.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.PasswdCantChange">
            <summary>
            The user cannot change the password. This is a permission on the user's object.
            For information about how to set this permission, visit the following Web site:
            http://msdn2.microsoft.com/en-us/library/aa746398.aspx
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.EncryptedTextPwdAllowed">
            <summary>
            The user can send an encrypted password.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.TempDuplicateAccount">
            <summary>
            This is an account for users whose primary account is in another domain. This
            account provides user access to this domain, but not to any domain that trusts
            this domain. This is sometimes referred to as a local user account.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.NormalAccount">
            <summary>
            This is a default account type that represents a typical user.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.InterdomainTrustAccount">
            <summary>
            This is a permit to trust an account for a system domain that trusts other domains.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.WorkstationTrustAccount">
            <summary>
            This is a computer account for a computer that is running Microsoft Windows NT 4.0
            Workstation, Microsoft Windows NT 4.0 Server, Microsoft Windows 2000 Professional,
            or Windows 2000 Server and is a member of this domain.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.ServerTrustAccount">
            <summary>
            This is a computer account for a domain controller that is a member of this domain.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.DontExpirePassword">
            <summary>
            Represents the password, which should never expire on the account.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.MNSLogonAccount">
            <summary>
            This is an MNS logon account.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.SmartcardRequired">
            <summary>
            When this flag is set, it forces the user to log on by using a smart card.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.TrustedForDelgation">
            <summary>
            When this flag is set, the service account (the user or computer account) under which
            a service runs is trusted for Kerberos delegation. Any such service can impersonate
            a client requesting the service. To enable a service for Kerberos delegation, you must
            set this flag on the userAccountControl property of the service account.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.NotDelegated">
            <summary>
            When this flag is set, the security context of the user is not delegated to a service
            even if the service account is set as trusted for Kerberos delegation.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.UseDESKeyOnly">
            <summary>
            (Windows 2000/Windows Server 2003) Restrict this principal to use only Data Encryption 
            Standard (DES) encryption for keys.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.DontReqPreauth">
            <summary>
            (Windows 2000/Windows Server 2003) This account does not require Kerberos pre-authentication
            for logging on.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.PasswordExpired">
            <summary>
            Only available via ms-DS-User-Account-Control-Computed attribute.
            (Windows 2000/Windows Server 2003) The user's password has expired.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.TrustedToAuthForDelegation">
            <summary>
            (Windows 2000/Windows Server 2003) The account is enabled for delegation. This is a security-sensitive
            setting. Accounts that have this option enabled should be tightly controlled. This setting lets a service
            that runs under the account assume a client's identity and authenticate as that user to other remote servers
            on the network.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.PartialSecretsAccount">
            <summary>
            Only available via ms-DS-User-Account-Control-Computed attribute.
            (Windows Server 2008/Windows Server 2008 R2) The account is a read-only domain controller (RODC). This is a
            security-sensitive setting. Removing this setting from an RODC compromises security on that server.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl.UseAESKeys">
            <summary>
            Only available via ms-DS-User-Account-Control-Computed attribute.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.DistinguishedName">
            <summary>
            The base distinguished name (DN) of Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.Name">
            <summary>
            The domain name of the Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.NTName">
            <summary>
            The NT style domain name of the Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.WellKnownSid_System">
            <summary>
            The SYSTEM sid.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.AdministratorsGroupDN">
            <summary>
            The distinguished name of the Administrators group for this domain.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.DomainAdminsGroupDN">
            <summary>
            The distinguished name of the Domain Administrators group for this domain.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.DomainUsersGroupDN">
            <summary>
            The distinguished name of the Domain Users group for this domain.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectory.EnterpriseAdminsGroupDN">
            <summary>
            The distinguished name of the Enterprise Administrators group for this domain.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.#ctor(System.String,System.String)">
            <summary>
            Binds to Active Directory using the configuration in the specified configuration item.
            </summary>
            <param name="configurationItemDirectoryPath">The physical path to the directory where configuration item files can be found.</param>
            <param name="configurationItemName">The name of the configuration item containing the Active Directory configuration.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.#ctor(System.String,System.String,System.Security.SecureString,System.String)">
            <summary>
            Binds to Active Directory.
            </summary>
            <param name="domainName">The DNS style domain name of the Active Directory to connect to.</param>
            <param name="userName">The username of the account in AD to use when making the connection.</param>
            <param name="password">The password of the account.</param>
            <param name="siteName">(Optional)The name of a site in Active Directory to use the domain controllers from. Defaults to DEFAULT_FIRST_SITE_NAME if not supplied.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.String)">
            <summary>
            Constructs an Active Directory object with a base of the specified OU. Binds to Active Directory.
            </summary>
            <param name="domainName">The DNS style domain name of the Active Directory to connect to.</param>
            <param name="ouDn">The distinguished name of the OU to use as a base for operations.</param>
            <param name="userName">The username of the account in AD to use when making the connection.</param>
            <param name="password">The password of the account.</param>
            <param name="siteName">(Optional)The name of a site in Active Directory to use the domain controllers from. Defaults to DEFAULT_FIRST_SITE_NAME if not supplied.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.#ctor(System.String,System.String,System.String)">
            <summary>
            Binds to Active Directory. Uses the current session credentials to authenticate.
            </summary>
            <param name="domainName">(Optional) The DNS style domain name of the Active Directory to connect to. If left unspecified, the domain that the computer is currently connected to will be used.</param>
            <param name="ouDn">(Optional) The distinguished name of the OU to use as a base for operations. If left unspecified, the root of the domain will be used.</param>
            <param name="siteName">(Optional)The name of a site in Active Directory to use the domain controllers from. Defaults to DEFAULT_FIRST_SITE_NAME if not supplied.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.Add(System.String,System.DirectoryServices.Protocols.DirectoryAttribute[])">
            <summary>
            Adds an entry to the Active Directory with the specified distinguished name and attributes.
            </summary>
            <param name="dn">The distinguished name of the entry to add.</param>
            <param name="attributes">The attributes for the entry to add.</param>
            <returns>True if added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.AddOrReplaceAttributeValue(System.String,System.Object[],System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Adds or replaces the attribute value(s) in the supplied entry.
            </summary>
            <param name="name">The name of the attribute to set.</param>
            <param name="values">The value(s) to set the attribute to.</param>
            <param name="entry">The SearchResultEntry to set the attribute value in.</param>
            <returns>True if it was set, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.AppendDistinguishedName(System.String)">
            <summary>
            Appends the distinguished name of this Active Directory domain to the relative path to the root supplied.
            </summary>
            <param name="pathToRoot">The relative path to the root of this domain.</param>
            <returns>The absolute path including this domain's distinguished name. Null if a null string is supplied.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.Delete(System.Guid)">
            <summary>
            Deletes an entry with the specified GUID from Active Directory.
            </summary>
            <param name="guid"></param>
            <returns>True if the entry was deleted, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.DeleteAttribute(System.String,System.DirectoryServices.Protocols.SearchResultEntry,System.Object[])">
            <summary>
            Deletes an attribute's values from the specified entry in Active Directory.
            </summary>
            <param name="name">The name of the attribute that should have its value deleted.</param>
            <param name="entry">The SearchResultEntry containing the attribute to delete.</param>
            <param name="values">Optional: The specific values to delete. If null, all values will be deleted. Defaults to null.</param>
            <returns>True if the attribute's values are deleted, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.Dispose">
            <summary>
            Releases underlying resources associated with the Active Directory connection.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetByteAttributeValue(System.String,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets the first byte attribute value from the supplied entry.
            </summary>
            <param name="name">The name of the attribute to retrieve.</param>
            <param name="entry">The SearchResultEntry to get the attribute value from.</param>
            <returns>A first byte array value held in the attribute, or an empty byte array if there was an error retrieving the value or the attribute was empty.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetByteAttributeValues(System.String,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets all byte attribute values from the supplied entry.
            </summary>
            <param name="name">The name of the attribute to retrieve.</param>
            <param name="entry">The SearchResultEntry to get the attribute value from.</param>
            <returns>An array of byte array values held in the attribute, or an empty array of byte arrays if there was an error retrieving the values or the attribute was empty.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetIntervalAttributeValue(System.String,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets the UTC DateTime from a Interval attribute of the supplied entry.
            </summary>
            <param name="name">The name of the attribute to retrieve.</param>
            <param name="entry">The SearchResultEntry to get the attribute value from.</param>
            <returns>The DateTime representing the interval supplied or null if attribute could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetSiteDomainControllers(System.String,System.String)">
            <summary>
            Gets the domain controllers associated with a specific Active Directory site from the Active Directory's DNS SRV records.
            </summary>
            <param name="domainName">The DNS domain name of the Active Directory to retrieve the domain controllers for.</param>
            <param name="siteName">The name of the site to retrieve the domain controllers for.</param>
            <returns>A list containing the FQDNs of the domain controllers in the specified site, or an empty list if they could not be retrieved.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetStringAttributeValue(System.String,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets the first string attribute value from the supplied entry.
            </summary>
            <param name="name">The name of the attribute to retrieve.</param>
            <param name="entry">The SearchResultEntry to get the attribute value from.</param>
            <returns>A first string value held in the attribute, or null if there was an error retrieving the value or the attribute was empty.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetStringAttributeValues(System.String,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets all string attribute values from the supplied entry.
            </summary>
            <param name="name">The name of the attribute to retrieve.</param>
            <param name="entry">The SearchResultEntry to get the attribute value from.</param>
            <returns>A list of string values held in the attribute, or null if there was an error retrieving the values or the attribute was empty.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.IsGroupNameValid(System.String)">
            <summary>
            Checks whether the group name supplied conforms to the limitations imposed by Active Directory.
            Active Directory Group Name Limitations:
            63 character length limit
            Can not consist solely of numbers, periods, or spaces.
            There must be no leading periods or spaces.
            </summary>
            <param name="name">The name to check.</param>
            <returns>True if it meets the limitations, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetDateTimeFromUTCCodedTime(System.String)">
            <summary>
            Gets a DateTime representation from the UTC coded time string used by some Active Directory attributes.
            </summary>
            <param name="utcCodedTime">The string that contains the UTC coded time.</param>
            <returns>A new DateTime with the time, or null if the string could not be parsed or was not supplied.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByAttribute(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given an attribute name and value to search for.
            </summary>
            <param name="attributeName">The name of the attribute to search against.</param>
            <param name="attributeValue">The value to search for in the attribute.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntriesByAttribute(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets entries that match a given wildcarded (*) attribute value in the supplied attribute.
            </summary>
            <param name="attributeName">The name of the attribute to search against.</param>
            <param name="attributeValue">The value to search for in the attribute.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The list of SearchResultEntry(s) found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByCommonName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its common name.
            </summary>
            <param name="cn">The common name of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByDistinguishedName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its distinguished name.
            </summary>
            <param name="dn">The distinguished name of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByAccountId(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its Account ID.
            </summary>
            <param name="accountId">The account ID of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByEmailAddress(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its E-mail address.
            </summary>
            <param name="emailAddress">The e-mail address of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryByGUID(System.Guid,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its GUID.
            </summary>
            <param name="guid">The GUID of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntryBySAMAccountName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets an entry given its SAM account name.
            </summary>
            <param name="sAMAccountName">The SAM account name of the entry to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in the entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntriesBySAMAccountName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets entries that match a given wildcarded (*) SAM account name.
            </summary>
            <param name="sAMAccountName">The SAM account name of the entries to get.</param>
            <param name="attributes">(Optional) The attributes that should be returned in each entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The list of SearchResultEntry(s) found, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntry(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the first entry in a search given an LDAP search filter.
            </summary>
            <param name="filter">The LDAP search filter string that will find the entry.</param>
            <param name="attributes">(Optional) The attributes that should be returned in each entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>The SearchResultEntry object of the entry, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetEntries(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets all entries in a search given an LDAP search filter.
            </summary>
            <param name="filter">The LDAP search filter string that will find the entries.</param>
            <param name="attributes">(Optional) The attributes that should be returned in each entry found. If not provided, all non-constructed attributes are returned. Constructed attributes must be explicitly defined.</param>
            <returns>A list of SearchResultEntry objects, or null if not found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUID(System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets the GUID of the supplied entry.
            </summary>
            <param name="entry">The entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUIDByAttribute(System.String,System.String)">
            <summary>
            Gets the GUID of the entry with the supplied attribute value.
            </summary>
            <param name="attributeName">The name of the attribute to search.</param>
            <param name="attributeValue">The attribute value of the entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUIDByEmployeeNumber(System.String)">
            <summary>
            Gets the GUID of the entry with the supplied employee number.
            </summary>
            <param name="employeeNumber">The employee number of the entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUIDBySAMAccountName(System.String)">
            <summary>
            Gets the GUID of the entry with the supplied SAM account name.
            </summary>
            <param name="sAMAccountName">The SAM account name of the entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUIDByDistinguishedName(System.String)">
            <summary>
            Gets the GUID of the entry with the supplied distinguished name.
            </summary>
            <param name="dn">The distinguished name of the entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetGUIDByCommonName(System.String)">
            <summary>
            Gets the GUID of the entry with the supplied common name.
            </summary>
            <param name="cn">The common name of the entry to get the GUID of.</param>
            <returns>The GUID of the entry, or an Empty GUID if it could not be found, or there was an error retrieving it.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.GetUserAccountControlName(Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl)">
            <summary>
            Gets a string with the name of a User Account Control flag given its value.
            </summary>
            <param name="uac">The value of the User Account Control flag.</param>
            <returns>The name of the flag.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.MoveRenameObject(System.Guid,System.Nullable{System.Guid},System.String)">
            <summary>
            Moves and / or renames an object in Active Directory.
            </summary>
            <param name="objectGuid">The GUID of the object to move and / or rename.</param>
            <param name="newParentObjectGuid">(Optional: Required only if moving) The GUID of the new parent object for the object (if moving).</param>
            <param name="newCommonName">(Optional: Required only if renaming) The new common name (if renaming).</param>
            <returns>True if the object was moved or renamed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.SetSearchBase(System.String)">
            <summary>
            Sets the object that is the base for all searches within Active Directory.
            This only needs to be set if you need to search somewhere other than the base of the directory.
            </summary>
            <param name="distinguishedName">The distinguished name of the object where searches will begin. (Typically an OU or the base DN of the directory.)</param>
            <returns>True if the search base was set, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.ToInterval(System.DateTime)">
            <summary>
            Gets a Interval value of the supplied DateTime.
            Interval attributes are stored as Windows File Time strings with the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 AD, UTC.
            </summary>
            <param name="date">The DateTime object to convert into an Interval value.</param>
            <returns>The Interval (string) value of the supplied DateTime, or null if it could not be converted.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.ToInterval(System.UInt64)">
            <summary>
            Gets a Interval value of the supplied UInt64.
            Interval attributes are stored as Windows File Time strings with the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 AD, UTC.
            </summary>
            <param name="unsigned">The UInt64 to convert into an Interval value.</param>
            <returns>The Interval (string) value of the supplied Uint64, or null if it could not be converted.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectory.UserAccountControlContains(System.Int64,Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl)">
            <summary>
            Tests whether an integer contains a UserAccountControl flag.
            </summary>
            <param name="accountControlValue">The integer to test.</param>
            <param name="flag">The UserAccountControl flag to look for.</param>
        </member>
        <member name="F:Galactic.ActiveDirectory.ActiveDirectoryObject.AttributeNames">
            <summary>
            The list of Attributes that should be retrieved when searching for the entry in AD.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.CommonName">
            <summary>
            The Common Name (CN) of the object in Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.CreateTimeStamp">
            <summary>
            The time the object was created in UTC.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.DistinguishedName">
            <summary>
            The Distinguished Name (DN) of the object in Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.GUID">
            <summary>
            The GUID of the object in Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.OrganizationalUnit">
            <summary>
            The distinguished name of the organizational unit or parent object containing the object.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.ActiveDirectoryObject.SchemaClasses">
            <summary>
            The schema class types that identify the type of object this is in Active Directory.
            Examples: group, user, etc.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.Guid)">
            <summary>
            Gets a directory object from AD with the supplied GUID.
            </summary>
            <param name="ad">An Active Directory object used to query and manipulate the directory object.</param>
            <param name="guid">The GUID of the object.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets a directory object from a supplied search result entry.
            </summary>
            <param name="ad">An Active Directory object used to manipulate the directory object.</param>
            <param name="entry">The SearchResultEntry object containing attributes necessary to populate the object.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.DeleteAttribute(System.String,System.Object[])">
            <summary>
            Deletes values from an attribute.
            </summary>
            <param name="attributeName">The name of the attribute with values to delete.</param>
            <param name="values">Optional: The specific values to delete from the object, or if null, will delete all attributes. Defaults to null.</param>
            <returns>True if the values were deleted, or false if there was an error or the values could not otherwise be deleted.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetEntryFromAD(System.Guid)">
            <summary>
            Gets new data for the object from AD and places the values in the entry variable within the object.
            </summary>
            <param name="guid">The GUID of the object to get.</param>
            <returns>The SearchResultEntry corresponding the GUID supplied, or null if it could not be found in AD.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetByteAttributeValue(System.String)">
            <summary>
            Gets the first byte array value from the supplied attribute of the object.
            </summary>
            <param name="attributeName">The name of the attribute to retreive.</param>
            <returns>The value of the attribute, or null if it could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetByteAttributeValues(System.String)">
            <summary>
            Gets all byte array values from the supplied attribute of the object.
            </summary>
            <param name="attributeName">The name of the attribute to retreive.</param>
            <returns>The values of the attribute, or null if it could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetEntryFromAD(System.Guid,System.Collections.Generic.List{System.String})">
            <summary>
            Gets new data for the object from AD and places the values in the entry variable within the object.
            </summary>
            <param name="guid">The GUID of the object to get.</param>
            <param name="additionalAttributes">The names of additional attributes to include in the query.</param>
            <returns>The SearchResultEntry corresponding the GUID supplied, or null if it could not be found in AD.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetIntervalAttributeValue(System.String)">
            <summary>
            Gets the UTC DateTime from a Interval attribute.
            </summary>
            <param name="attributeName">The name of the attribute to retreive.</param>
            <returns>The value of the attribute, or null if it could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetStringAttributeValue(System.String)">
            <summary>
            Gets the first string value from the supplied attribute of the object.
            </summary>
            <param name="attributeName">The name of the attribute to retreive.</param>
            <returns>The value of the attribute, or null if it could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetStringAttributeValues(System.String)">
            <summary>
            Gets all string values from the supplied attribute of the object.
            </summary>
            <param name="attributeName">The name of the attribute to retreive.</param>
            <returns>The values of the attribute, or null if it could not be found.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.MoveRename(System.Nullable{System.Guid},System.String)">
            <summary>
            Moves and / or renames this object.
            </summary>
            <param name="newParentObjectGuid">(Optional: Required only if moving) The GUID of the new parent object for the object (if moving).</param>
            <param name="newCommonName">(Optional: Required only if renaming) The new common name (if renaming).</param>
            <returns>True if the object was moved or renamed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.Refresh">
            <summary>
            Refreshes the object to retrieve any changes made to attributes since creation.
            </summary>
            <returns>True if the refresh was successful, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.RefreshEntryIfNeededToRetrieveAttribute(System.String)">
            <summary>
            Refreshed the object's entry variable if required to get a new attribute from the object in AD.
            </summary>
            <param name="attributeName">The name of the attribute to retrieve if necessary.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.SetAttribute(System.String,System.Object[])">
            <summary>
            Sets attribute of an object. If a null or empty values object is supplied no modifications will be made.
            </summary>
            <param name="attributeName">The name of the attribute to set.</param>
            <param name="values">The value(s) to set the attribute to.</param>
            <returns>True if the attribute was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.SetStringAttribute(System.String,System.String)">
            <summary>
            Sets a single value string attribute of an object. If a null or empty value is supplied,
            the attribute will be cleared / deleted.
            </summary>
            <param name="attributeName">The name of the attribute to set.</param>
            <param name="value">The string value to set the attribute to.</param>
            <returns>True if the attribuet was set successfully, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.Equals(Galactic.ActiveDirectory.ActiveDirectoryObject,Galactic.ActiveDirectory.ActiveDirectoryObject)">
            <summary>
            Checks whether x and y are equal (using GUIDs).
            </summary>
            <param name="x">The first ActiveDirectoryObject to check.</param>
            <param name="y">The second ActiveDirectoryObject to check against.</param>
            <returns>True if the objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.GetHashCode(Galactic.ActiveDirectory.ActiveDirectoryObject)">
            <summary>
            Generates a hash code for the ActiveDirectoryObject supplied.
            </summary>
            <param name="obj">The ActiveDirectoryObject to generate a hash code for.</param>
            <returns>An integer hash code for the object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.ActiveDirectoryObject.CompareTo(Galactic.ActiveDirectory.ActiveDirectoryObject)">
            <summary>
            Compares this ActiveDirectoryObject to another ActiveDirectoryObject.
            </summary>
            <param name="other">The other ActiveDirectoryObject to compare this one to.</param>
            <returns>-1 if the object supplied comes before this one in the sort order, 0 if they occur at the same position, 1 if the object supplied comes after this one in the sort order</returns>
        </member>
        <member name="T:Galactic.ActiveDirectory.Group">
            <summary>
            Group is a class that allows for the query and manipulation of
            Active Directory group objects.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.Group.AttributeNames">
            <summary>
            The list of specific attributes that should be retrieved when searching for the entry in AD. The attributes of parent objects should be included as well.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.Group.AllUserMembers">
            <summary>
            Does a recursive lookup to find all users that are a member of this
            group by way of subgroup membership.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.Group.GroupMembers">
            <summary>
            Groups that are members of the group.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.Group.Members">
            <summary>
            The members of the group.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.Group.UserMembers">
            <summary>
            Users who are members of the group.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.Guid)">
            <summary>
            Gets a group object from Active Directory with the supplied GUID.
            </summary>
            <param name="ad">An Active Directory object used to query and manipulate the directory object.</param>
            <param name="guid">The GUID of the user.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets a group object from a supplied search result entry.
            </summary>
            <param name="ad">An Active Directory object used to manipulate the group.</param>
            <param name="entry">The SearchResultEntry object containing attributes necessary to populate the object.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.AddMembers(System.Collections.Generic.List{Galactic.ActiveDirectory.SecurityPrincipal})">
            <summary>
            Adds security principals to the group.
            </summary>
            <param name="principals">The principals to add.</param>
            <returns>True if the principals were added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.ClearMembership">
            <summary>
            Clears all members from this group.
            </summary>
            <returns>True if all members were cleared, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.Create(Galactic.ActiveDirectory.ActiveDirectory,System.String,System.String,System.UInt32,System.Collections.Generic.List{System.DirectoryServices.Protocols.DirectoryAttribute})">
            <summary>
            Creates a new group within Active Directory given it's proposed name, the distinguished name of the OU to place it in, and other optional attributes.
            </summary>
            <param name="ad">An Active Directory object used to create the group.</param>
            <param name="sAMAccountName">The proposed SAM Account name for the group.</param>
            <param name="ouDn">The distinguished name for the OU to place the group within.</param>
            <param name="type">A uint from the ActiveDirectory.GroupType enum representing the type of group to create.</param>
            <param name="additionalAttributes">Optional: Additional attributes to set when creating the group.</param>
            <returns>The newly created group object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.Delete(Galactic.ActiveDirectory.ActiveDirectory,System.Guid)">
            <summary>
            Deletes a group from Active Directory.
            </summary>
            <param name="ad">An Active Directory object used to delete the group.</param>
            <param name="guid">The GUID of the group.</param>
            <returns>True if the group was deleted, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.RemoveMember(Galactic.ActiveDirectory.SecurityPrincipal)">
            <summary>
            Removes a security principal from the group.
            </summary>
            <param name="principal">The principal to remove.</param>
            <returns>True if the principal was removed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.RemoveMembers(System.Collections.Generic.List{Galactic.ActiveDirectory.SecurityPrincipal})">
            <summary>
            Removes security principals from the group.
            </summary>
            <param name="principals">The principals to remove.</param>
            <returns>True if the principals were removed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.Equals(Galactic.ActiveDirectory.Group,Galactic.ActiveDirectory.Group)">
            <summary>
            Checks whether x and y are equal (using GUIDs).
            </summary>
            <param name="x">The first Group to check.</param>
            <param name="y">The second Group to check against.</param>
            <returns>True if the objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.GetHashCode(Galactic.ActiveDirectory.Group)">
            <summary>
            Generates a hash code for the Group supplied.
            </summary>
            <param name="obj">The Group to generate a hash code for.</param>
            <returns>An integer hash code for the object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.Group.CompareTo(Galactic.ActiveDirectory.Group)">
            <summary>
            Compares this Group to another Group.
            </summary>
            <param name="other">The other Group to compare this one to.</param>
            <returns>-1 if the object supplied comes before this one in the sort order, 0 if they occur at the same position, 1 if the object supplied comes after this one in the sort order</returns>
        </member>
        <member name="F:Galactic.ActiveDirectory.SecurityPrincipal.AttributeNames">
            <summary>
            The list of specific attributes that should be retrieved when searching for the entry in AD. The attributes of parent objects should be included as well.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.Description">
            <summary>
            A description of the security principal.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.EMailAddress">
            <summary>
            The principal's e-mail address.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.EmailAddresses">
            <summary>
            A list of the principal's e-mail addresses.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.ExchangeAlias">
            <summary>
            The principal's Microsoft Exchange Alias.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.Groups">
            <summary>
            The distinguished names of groups that this principal is a member of.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.IsGroup">
            <summary>
            Indicates if this principal is a Group.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.IsUser">
            <summary>
            Indicates if this principal is a User.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.PrimaryEmailAddress">
            <summary>
            The principal's primary e-mail address.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.SAMAccountName">
            <summary>
            The principal's SAM Account Name.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.TargetAddress">
            <summary>
            The principal's target e-mail address. Used by Exchange for routing e-mail to its
            final destination which may lie outside of the organization. Allows for an object
            to appear in the GAL even though its e-mail address may be outside of Exchange.
            Also used when routing e-mail to the Microsoft Office365 cloud from an on-premises
            Exchange server.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.SecurityPrincipal.UserPrincipalName">
            <summary>
            The User Principal Name of the principal.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.Guid)">
            <summary>
            Gets a security principal object from Active Directory with the supplied GUID.
            </summary>
            <param name="ad">An Active Directory object used to query and manipulate the security principal.</param>
            <param name="guid">The GUID of the security principal</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets a security principal object from a supplied search result entry.
            </summary>
            <param name="ad">An Active Directory object used to manipulate the security principal.</param>
            <param name="entry">The SearchResultEntry object containing attributes necessary to populate the object.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.AddProxyAddress(System.String,System.Boolean)">
            <summary>
            Adds a proxy e-mail address to the account's proxyAddresses field.
            </summary>
            <param name="emailAddress">The address in standard e-mail format (username@domain.com)</param>
            <param name="asPrimary">If the address should be added as the primary proxy address.</param>
            <returns>True if the address was added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.AddToGroup(System.Guid)">
            <summary>
            Adds this principal to the supplied group.
            </summary>
            <param name="guid">The GUID of the group to add the principal to.</param>
            <returns>True if the principal was added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.RemoveFromGroup(System.Guid)">
            <summary>
            Removes this principal from the supplied group.
            </summary>
            <param name="guid">The GUID of the group to add the principal to.</param>
            <returns>True if the principal was added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.MemberOfGroup(System.Guid,System.Boolean)">
            <summary>
            Checks if this principal is a member of the supplied group.
            </summary>
            <param name="guid">The GUID of the group to check.</param>
            <param name="recursive">Whether to do a recursive lookup of all parent groups that this principal might be a member of.</param>
            <returns>True if the principal is a member, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.MoveRename(System.Nullable{System.Guid},System.String)">
            <summary>
            Moves and / or renames this object.
            </summary>
            <param name="newParentObjectGuid">(Optional: Required only if moving) The GUID of the new parent object for the object (if moving).</param>
            <param name="newSAMAccountName">(Optional: Required only if renaming) The new SAM Account Name (if renaming).</param>
            <returns>True if the object was moved or renamed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.RemoveProxyAddress(System.String)">
            <summary>
            Removes a proxy e-mail address from the account's proxyAddresses field.
            </summary>
            <param name="emailAddress">The address in standard e-mail format (username@domain.com)</param>
            <returns>True if the address was removed or not found, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.SetPrimaryProxyAddress(System.String)">
            <summary>
            Sets the supplied e-mail address to be the primary e-mail address for receiving mail.
            Note: This e-mail address must already be associated with the account.
            If there is account currently has a primary e-mail address, it will be set as a secondary.
            </summary>
            <param name="emailAddress">The e-mail address to make primary.</param>
            <returns>Returns true if the e-mail address was made the primary, false if the e-mail address supplied was not already associated with the account,
            or the address could not be made primary for any reason.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.Equals(Galactic.ActiveDirectory.SecurityPrincipal,Galactic.ActiveDirectory.SecurityPrincipal)">
            <summary>
            Checks whether x and y are equal (using GUIDs).
            </summary>
            <param name="x">The first SecurityPrincipal to check.</param>
            <param name="y">The second SecurityPrincipal to check against.</param>
            <returns>True if the objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.GetHashCode(Galactic.ActiveDirectory.SecurityPrincipal)">
            <summary>
            Generates a hash code for the SecurityPrincipal supplied.
            </summary>
            <param name="obj">The SecurityPrincipal to generate a hash code for.</param>
            <returns>An integer hash code for the object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.SecurityPrincipal.CompareTo(Galactic.ActiveDirectory.SecurityPrincipal)">
            <summary>
            Compares this SecurityPrincipal to another SecurityPrincipal.
            </summary>
            <param name="other">The other SecurityPrincipal to compare this one to.</param>
            <returns>-1 if the object supplied comes before this one in the sort order, 0 if they occur at the same position, 1 if the object supplied comes after this one in the sort order</returns>
        </member>
        <member name="T:Galactic.ActiveDirectory.User">
            <summary>
            User is a class that allows for the query and manipulation of
            Active Directory user objects.
            </summary>
        </member>
        <member name="F:Galactic.ActiveDirectory.User.AttributeNames">
            <summary>
            The list of specific attributes that should be retrieved when searching for the entry in AD. The attributes of parent objects should be included as well.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.BadPasswordCount">
            <summary>
            The number of times the user has entered a bad password.
            Returns a negative number is there is an error retrieving the value.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.BadPasswordTime">
            <summary>
            The last time that the user entered a bad password when authenticating to AD.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.Department">
            <summary>
            The Department the user belongs to.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.EmployeeNumber">
            <summary>
            The employee number of the user.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.IsDisabled">
            <summary>
            Whether the user's account is disabled in Active Directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.DisplayName">
            <summary>
            The user's display name.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.Division">
            <summary>
            The user's division in the organization.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.EmployeeId">
            <summary>
            The Employee Id of the user.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.FirstName">
            <summary>
            The user's first name.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.FTPDirectory">
            <summary>
            The FTP Directory for the user off the FTP root.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.FTPRoot">
            <summary>
            The root directory for FTP access by the user.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.HomeDirectory">
            <summary>
            The path to the user's home directory.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.HomeDrive">
            <summary>
            The user's home drive letter.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.HomePage">
            <summary>
            The user's home page URL.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.LastName">
            <summary>
            The user's last name.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.LogonScript">
            <summary>
            The path to the user's logon script.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.Manager">
            <summary>
            The distinguished name of the user's Manager.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.MustChangePasswordAtNextLogon">
            <summary>
            Whether the user has to change their password at their next logon.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.PasswordExpired">
            <summary>
            Whether the user's password has expired.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.PasswordLastSet">
            <summary>
            The date and time that the user's password was last site.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.PhoneNumber">
            <summary>
            The user's telephone number.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.SecurityIdentifier">
            <summary>
            The user's security identifier (SID).
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.StreetAddress">
            <summary>
            The user's street address.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.Title">
            <summary>
            The user's title.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.UserAccountControl">
            <summary>
            Gets the user's UserAccountControl property.
            A return of 0 means there was an error retrieving the property.
            </summary>
        </member>
        <member name="P:Galactic.ActiveDirectory.User.UserAccountControlComputed">
            <summary>
            Gets the user's computed UserAccountControl property.
            A return value of 0 means it wasn't computed.
            </summary>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.Guid)">
            <summary>
            Gets a user object from Active Directory with the supplied GUID.
            </summary>
            <param name="ad">An Active Directory object used to query and manipulate the user.</param>
            <param name="guid">The GUID of the user.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.#ctor(Galactic.ActiveDirectory.ActiveDirectory,System.DirectoryServices.Protocols.SearchResultEntry)">
            <summary>
            Gets a user object from a supplied search result entry.
            </summary>
            <param name="ad">An Active Directory object used to manipulate the user.</param>
            <param name="entry">The SearchResultEntry object containing attributes necessary to populate the object.</param>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.Create(Galactic.ActiveDirectory.ActiveDirectory,System.String,System.String,System.Collections.Generic.List{System.DirectoryServices.Protocols.DirectoryAttribute})">
            <summary>
            Creates a new user within Active Directory given it's proposed name, the distinguished name of the OU to place it in, and other optional attributes.
            </summary>
            <param name="ad">An Active Directory object used to create the user.</param>
            <param name="sAMAccountName">The proposed SAM Account name for the user.</param>
            <param name="ouDn">The distinguished name for the OU to place the user within.</param>
            <param name="additionalAttributes">Optional: Additional attribute values to set when creating the user.</param>
            <returns>The newly created user object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.Disable">
            <summary>
            Disables the user's account for authentication if it is enabled.
            </summary>
            <returns>True if the account is disabled successfully or was not enabled. False if the account could not be disabled.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.Enable">
            <summary>
            Enables the user's account for authentication if it is disabled.
            </summary>
            <returns>True if the account is enabled successfully or was not disabled. False if the account could not be enabled.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.GetAllUsers(Galactic.ActiveDirectory.ActiveDirectory)">
            <summary>
            Gets all users in the Active Directory.
            </summary>
            <param name="ad">The Active Directory to retrieve users from.</param>
            <returns>A list of all users in the Active Directory.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.GetModifiedUsers(Galactic.ActiveDirectory.ActiveDirectory,System.DateTime,System.DateTime)">
            <summary>
            Gets of all user accounts that were modified within the specified time frame.
            </summary>
            <param name="ad">The Active Directory to retrieve users from.</param>
            <param name="startDate">The lower boundary of the time frame.</param>
            <param name="endDate">The upper boundary of the time frame.</param>
            <returns>Returns a list of all users that were during the specified period of time.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.SetPassword(System.String)">
            <summary>
            Sets the password of the user.
            </summary>
            <param name="password">The new password to use for the user.</param>
            <returns>True if the password was set, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.Unlock">
            <summary>
            Unlocks the user's account if it is locked.
            </summary>
            <returns>True if the account is unlocked successfully or was not locked. False if the account could not be unlocked.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.SetUserAccountControlFlag(Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl)">
            <summary>
            Sets a flag in the user's User Account Control attribute.
            </summary>
            <param name="flag">A flag from the predefined UserAccountControl flags.</param>
            <returns>True if set, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.RemoveUserAccountControlFlag(Galactic.ActiveDirectory.ActiveDirectory.UserAccountControl)">
            <summary>
            Removes a flag from the user's User Account Control attribute.
            </summary>
            <param name="flag">A flag from the predefined UserAccountControl flags.</param>
            <returns>True if removed, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.Equals(Galactic.ActiveDirectory.User,Galactic.ActiveDirectory.User)">
            <summary>
            Checks whether x and y are equal (using GUIDs).
            </summary>
            <param name="x">The first User to check.</param>
            <param name="y">The second User to check against.</param>
            <returns>True if the objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.GetHashCode(Galactic.ActiveDirectory.User)">
            <summary>
            Generates a hash code for the User supplied.
            </summary>
            <param name="obj">The User to generate a hash code for.</param>
            <returns>An integer hash code for the object.</returns>
        </member>
        <member name="M:Galactic.ActiveDirectory.User.CompareTo(Galactic.ActiveDirectory.User)">
            <summary>
            Compares this User to another User.
            </summary>
            <param name="other">The other User to compare this one to.</param>
            <returns>-1 if the object supplied comes before this one in the sort order, 0 if they occur at the same position, 1 if the object supplied comes after this one in the sort order</returns>
        </member>
    </members>
</doc>
