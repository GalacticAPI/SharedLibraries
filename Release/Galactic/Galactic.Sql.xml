<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Galactic.Sql</name>
    </assembly>
    <members>
        <member name="T:Galactic.Sql.IStoredProcedure">
            <summary>
            An Interface for SQL Stored Procedures.
            </summary>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddParameter(System.String,System.Object,System.Data.DbType,System.Type,Galactic.Sql.StoredProcedure.ParameterType,System.Nullable{System.Int32})">
            <summary>
            Adds a parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="valueType">The database type of the value to add with the parameter.</param>
            <param name="parameterType">The object type of the parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <param name="maxSize">The maximum size of the parameter's value in bytes (if relevant).</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddBooleanParameter(System.String,System.Nullable{System.Boolean},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a boolean parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddInt32Parameter(System.String,System.Nullable{System.Int32},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a 32-bit integer parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddInt64Parameter(System.String,System.Nullable{System.Int64},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a 64-bit integer parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddDateTimeParameter(System.String,System.DateTime,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a date and time parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddNCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Unicode fixed length character parameter to the procedure.
            Strings longer than SqlUtility.MAX_NVARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the fixed length character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddNVarCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Unicode variable character parameter to the procedure.
            Strings longer than SqlUtility.MAX_NVARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the variable character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.AddVarCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Non-Unicode variable character parameter to the procedure.
            Strings longer than SqlUtility.MAX_VARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the variable character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.Execute">
            <summary>
            Executes the procedure.
            </summary>
            <returns>A List containing SqlRows or null if the Connection and Command for this procedure are not initialized.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.ExecuteNonQuery">
            <summary>
            Executes a non query procedure (Insert, Update, Delete).
            </summary>
            <returns>The number of rows affected by the query.</returns>
            <exception cref="T:System.ApplicationException">Thrown if there is an error executing the stored procedure.</exception>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.GetParameter(System.String)">
            <summary>
            Gets a parameter's value from the procedure.
            </summary>
            <param name="name">The name of the parameter to get.</param>
            <returns>The object that matches the value of the parameter, null if the parameter could not be found.</returns>
        </member>
        <member name="M:Galactic.Sql.IStoredProcedure.GetParamName(System.String)">
            <summary>
            Prepends a @ to the name of the parameter for use in SQL calls.
            </summary>
            <param name="name">The name of the parameter.</param>
            <returns>The parameter name with a @ prepended.</returns>
        </member>
        <member name="P:Galactic.Sql.IStoredProcedure.Name">
            <summary>
            The name of the stored procedure.
            </summary>
        </member>
        <member name="P:Galactic.Sql.IStoredProcedure.Connection">
            <summary>
            The connection to the database.
            </summary>
        </member>
        <member name="P:Galactic.Sql.IStoredProcedure.Command">
            <summary>
            The command to be sent to the database.
            </summary>
        </member>
        <member name="T:Galactic.Sql.SqlRow">
            <summary>
            SqlRow is a data class that contains a row from a SQL Database table.
            It is used in conjunction with StoredProcedure to return results from a procedure.
            </summary>
        </member>
        <member name="M:Galactic.Sql.SqlRow.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Galactic.Sql.SqlRow.Add(System.Int32,System.String,System.Object)">
            <summary>
            Adds a new field to the row.
            </summary>
            <param name="order">The order of the field.</param>
            <param name="name">The name of the field.</param>
            <param name="value">The value of the field.</param>
            <returns>True if the field was added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlRow.GetValue(System.String)">
            <summary>
            Get the value of a field in this row by name.
            </summary>
            <param name="fieldName">The name of the field to get the value of.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlRow.GetValue(System.Int32)">
            <summary>
            Get the value of a field in this row by column index number.
            </summary>
            <param name="columnIndex">The column index number of the field to get the value of.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlRow.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of a field in this row by name.
            </summary>
            <param name="fieldName">The name of the field to set the value of.</param>
            <param name="value">The value to set the field to.</param>
        </member>
        <member name="M:Galactic.Sql.SqlRow.SetValue(System.Int32,System.Object)">
            <summary>
            Sets the value of a field in this row by column index number.
            </summary>
            <param name="columnIndex">The column index number of the field to set the value of.</param>
            <param name="value">The value to set the field to.</param>
        </member>
        <member name="P:Galactic.Sql.SqlRow.Item(System.String)">
            <summary>
            Get or set the row's column values via their name.
            </summary>
            <param name="fieldName">The name of the field value to get or set.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="P:Galactic.Sql.SqlRow.Item(System.Int32)">
            <summary>
            Get or set the row's column values via the column's index.
            </summary>
            <param name="columnIndex">The index value of the column</param>
            <returns>The value of the field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The column index number specified was outside the range contained by this row.</exception>
        </member>
        <member name="T:Galactic.Sql.SqlUtility">
            <summary>
            Provides various utility methods for use with SQL databases.
            </summary>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.LogException(System.Exception,Galactic.EventLog.EventLog)">
            <summary>
            Logs an exception to the event log.
            </summary>
            <param name="e">The exception to log.</param>
            <param name="log">The event log to log the execption to.</param>
            <returns>True if the exception was logged successfully. False otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.RunScript(System.String,System.String[],Galactic.EventLog.EventLog)">
            <summary>
            Runs SQL script files given their path.
            </summary>
            <param name="connectionString">The connection string to use when creating the database.</param>
            <param name="scriptPaths">The paths to the script files on the filesystem.</param>
            <param name="log">The event log to log execptions to. May be null for no logging.</param>
            <returns>True if all scripts ran, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.ExecuteNonQuery(System.String,System.String,Galactic.EventLog.EventLog)">
            <summary>
            Executes the non-query SQL command provided.
            </summary>
            <param name="command">The SQL command text to execute.</param>
            <param name="connectionString">The connection string of the database to execute the script against.</param>
            <param name="log">The event log to log execptions to. May be null for no logging.</param>
            <returns>True if the command ran, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.ExecuteNonQuerySQLFile(System.String,System.String,Galactic.EventLog.EventLog)">
            <summary>
            Executes the SQL statements in a file given its path, and a connection string to the database.
            </summary>
            <param name="scriptFilePath">The path the the SQL script file to execute.</param>
            <param name="connectionString">The connection string of the database to execute the script against.</param>
            <param name="log">The event log to log execptions to. May be null for no logging.</param>
            <returns>True if the script ran, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.ExecuteQuery(System.String,System.String,Galactic.EventLog.EventLog)">
            <summary>
            Executes the SQL query provided.
            </summary>
            <param name="query">The query text to execute.</param>
            <param name="connectionString">The connection string of the database to execute the script against.</param>
            <param name="log">The event log to log execptions to. May be null for no logging.</param>
            <returns>A list of rows of data returned from the query.</returns>
        </member>
        <member name="M:Galactic.Sql.SqlUtility.ExecuteQuerySQLFile(System.String,System.String,Galactic.EventLog.EventLog)">
            <summary>
            Executes the SQL query in a file given its path, and a connection string to the database.
            </summary>
            <param name="scriptFilePath">The path the the TSQL script file to execute.</param>
            <param name="connectionString">The connection string of the database to execute the script against.</param>
            <param name="log">The event log to log execptions to. May be null for no logging.</param>
            <returns>A list of rows of data returned from the query.</returns>
        </member>
        <member name="P:Galactic.Sql.SqlUtility.MAX_NCHAR_LENGTH">
            <summary>
            The maximum length of a NCHAR field in the database.
            </summary>
        </member>
        <member name="P:Galactic.Sql.SqlUtility.MAX_NVARCHAR_LENGTH">
            <summary>
            The maximum length of a NVARCHAR field in the database.
            </summary>
        </member>
        <member name="P:Galactic.Sql.SqlUtility.MAX_VARCHAR_LENGTH">
            <summary>
            The maximum length of a VARCHAR field in the database.
            </summary>
        </member>
        <member name="T:Galactic.Sql.StoredProcedure">
            <summary>
            An SQL Stored Procedure.
            </summary>
        </member>
        <member name="F:Galactic.Sql.StoredProcedure.log">
            <summary>
            The event log that will receive events from this logger.
            </summary>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddParameter(System.String,System.Object,System.Data.DbType,System.Type,Galactic.Sql.StoredProcedure.ParameterType,System.Nullable{System.Int32})">
            <summary>
            Adds a parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="valueType">The database type of the value to add with the parameter.</param>
            <param name="parameterType">The object type of the parameter. Must be dervied from System.Data.Common.DbParameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <param name="maxSize">The maximum size of the parameter's value in bytes (if relevant).</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddBooleanParameter(System.String,System.Nullable{System.Boolean},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a boolean parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddInt32Parameter(System.String,System.Nullable{System.Int32},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a 32-bit integer parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddInt64Parameter(System.String,System.Nullable{System.Int64},Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a 64-bit integer parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddDateTimeParameter(System.String,System.DateTime,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds a date and time parameter to the procedure.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddNCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Unicode fixed length character parameter to the procedure.
            Strings longer than SqlUtility.MAX_NVARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the fixed length character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddNVarCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Unicode variable character parameter to the procedure.
            Strings longer than SqlUtility.MAX_NVARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the variable character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.AddVarCharParameter(System.String,System.String,System.Int32,Galactic.Sql.StoredProcedure.ParameterType)">
            <summary>
            Adds an Non-Unicode variable character parameter to the procedure.
            Strings longer than SqlUtility.MAX_VARCHAR_LENGTH and the length argument are truncated to fit.
            </summary>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <param name="length">The length of the variable character parameter.</param>
            <param name="direction">The direction of the parameter. Use one of the class parameter constants. Defaults to IN.</param>
            <returns>True if the parameter is added, false otherwise.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.Execute">
            <summary>
            Executes the procedure.
            </summary>
            <returns>A List containing SqlRows or null if the Connection and Command for this procedure are not initialized.</returns>
            <exception cref="T:System.ApplicationException">Thrown if there is an error executing the stored procedure.</exception>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.ExecuteNonQuery">
            <summary>
            Executes a non query procedure (Insert, Update, Delete).
            </summary>
            <returns>The number of rows affected by the query.</returns>
            <exception cref="T:System.ApplicationException">Thrown if there is an error executing the stored procedure.</exception>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.GetParameter(System.String)">
            <summary>
            Gets a parameter's value from the procedure.
            </summary>
            <param name="name">The name of the parameter to get.</param>
            <returns>The object that matches the value of the parameter, null if the parameter could not be found.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.GetParamName(System.String)">
            <summary>
            Prepends a @ to the name of the parameter for use in SQL calls.
            </summary>
            <param name="name">The name of the parameter.</param>
            <returns>The parameter name with a @ prepended.</returns>
        </member>
        <member name="M:Galactic.Sql.StoredProcedure.LogException(System.Exception)">
            <summary>
            Logs an exception to the event log.
            </summary>
            <param name="e">The exception to log.</param>
            <returns>True if the exception was logged successfully. False otherwise.</returns>
        </member>
        <member name="P:Galactic.Sql.StoredProcedure.Log">
            <summary>
            The event log that will receive events from this logger.
            </summary>
        </member>
        <member name="P:Galactic.Sql.StoredProcedure.Name">
            <summary>
            The name of the stored procedure.
            </summary>
        </member>
        <member name="P:Galactic.Sql.StoredProcedure.Connection">
            <summary>
            The connection to the database.
            </summary>
        </member>
        <member name="P:Galactic.Sql.StoredProcedure.Command">
            <summary>
            The command to be sent to the database.
            </summary>
        </member>
        <member name="T:Galactic.Sql.StoredProcedure.ParameterType">
            <summary>
            The type of parameter used by the stored procedure.
            </summary>
        </member>
        <member name="F:Galactic.Sql.StoredProcedure.ParameterType.In">
            <summary>
            A parameter that provides data to the procedure.
            </summary>
        </member>
        <member name="F:Galactic.Sql.StoredProcedure.ParameterType.Out">
            <summary>
            A parameter that returns data from a procedure.
            </summary>
        </member>
        <member name="F:Galactic.Sql.StoredProcedure.ParameterType.InOut">
            <summary>
            A parameter that provides and returns data from a procedure.
            </summary>
        </member>
        <member name="F:Galactic.Sql.StoredProcedure.ParameterType.Return">
            <summary>
            The return value of a procedure.
            </summary>
        </member>
    </members>
</doc>
